{"version":3,"sources":["Components/common/Paginator/Paginator.jsx","Components/Users/User.jsx","Components/Users/Users.jsx","redux/users-selectors.js","Components/Users/UsersContainer.jsx"],"names":["useStyles","makeStyles","theme","root","marginTop","spacing","Paginator","requestUsers","portionSize","props","useState","pageSize","totalUsersCount","pagesCount","currentPage","Math","ceil","pages","i","push","classes","className","Pagination","onChange","event","page","count","length","variant","shape","Users","unFollowUser","followUser","isDisabledBtn","element","id","name","status","photos","followed","to","src","small","userPhoto","alt","disabled","some","el","onClick","users","isFetching","sortUsers","map","User","key","getUsersSelect","createSelector","state","usersPage","filter","user","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getIsDisabledBtn","UsersContainer","getUsers","followThunk","unFollowThunk","this","React","Component","compose","connect","withAuthRedirect"],"mappings":"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","file":"static/js/3.44ad4b23.chunk.js","sourcesContent":["import React, {useState} from 'react';\r\nimport classNames from 'classnames/bind';\r\nimport './Paginator.scss';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport {Pagination} from '@material-ui/lab';\r\nimport { PaginationItem } from '@material-ui/lab';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        marginTop: theme.spacing(2),\r\n      },\r\n    },\r\n  }));\r\n\r\n\r\nlet Paginator = ({ requestUsers, portionSize = 10, ...props }) => {\r\n    const [portionNumber, setPortionNumber] = useState(1);\r\n\r\n\r\n    let { pageSize,\r\n        totalUsersCount, currentPage\r\n    } = props;\r\n\r\n    let pagesCount = Math.ceil(totalUsersCount / pageSize);\r\n\r\n    let pages = [];\r\n\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize +1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n        <Pagination  onChange={(event,page) => requestUsers(page)}  count={pages.length} variant=\"outlined\" shape=\"rounded\" />\r\n        </div>\r\n        // <div>\r\n           \r\n        //     {portionNumber && portionNumber > 1 ? <button onClick={()=>setPortionNumber(portionNumber - 1)}>Prev</button>: null}\r\n              \r\n        //     {\r\n        //         pages\r\n        //         .filter( el =>  el >= leftPortionPageNumber && el <= rightPortionPageNumber )\r\n        //             .map((el, index) => (\r\n\r\n        //                     <div className=\"wrappPagination\">\r\n                                \r\n        //                         <span\r\n        //                             key={index}\r\n        //                             onClick={() => { requestUsers(el) }}\r\n        //                             className={classNames('pageCount',\r\n        //                                 currentPage === el && \"selectedPage\")} >\r\n        //                             {el}\r\n        //                         </span>\r\n                               \r\n        //                     </div>\r\n        //             ))\r\n \r\n        //     }\r\n        //     {portionCount > portionNumber ? <button onClick={()=>setPortionNumber(portionNumber + 1)}>Next</button> : null}\r\n            \r\n        // </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport userPhoto from '../../assets/images/unnamed.png';\r\nimport classNames from 'classnames/bind';\r\nimport './Users.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from '../common/Paginator/Paginator';\r\n\r\n\r\nlet Users = ({unFollowUser, followUser, isDisabledBtn, element:{id,name, status, photos, followed }}) =>{\r\n\r\n    return(\r\n        <div>\r\n                    {\r\n                        <div>\r\n                            <span>\r\n                                <div>\r\n                                    <NavLink to={`/profile/${id}`}>\r\n                                        <img className=\"userAvatar\" src={photos.small == null ? userPhoto : photos.small} alt=\"img\" />\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div>\r\n                                    <button disabled={ isDisabledBtn.some(el => el === id)} onClick={ followed ? () => unFollowUser(id)  :()=>followUser(id)}>\r\n                                        {followed ? `Unfollow` : `Follow`}\r\n                                    </button>\r\n                                </div>\r\n                            </span>\r\n                            <span>\r\n                                <span>\r\n                                    <div>\r\n                                        {name}\r\n                                    </div>\r\n                                    <div>\r\n                                        {status}\r\n                                    </div>\r\n                                </span>\r\n                                <span>\r\n                                    <div>\r\n                                        {\"location.country\"}\r\n                                    </div>\r\n                                    <div>\r\n                                        {\"location.city\"}\r\n                                    </div>\r\n                                </span>\r\n                            </span>\r\n\r\n                        </div>\r\n                }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import React from 'react';\r\nimport userPhoto from '../../assets/images/unnamed.png';\r\nimport classNames from 'classnames/bind';\r\nimport './Users.scss';\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport User from './User';\r\n\r\n\r\nlet Users = ({props, requestUsers, followUser,unFollowUser}) =>{\r\n\r\n    let { users, pageSize,\r\n        totalUsersCount, currentPage,isFetching,\r\n        isDisabledBtn,sortUsers\r\n    } = props;\r\n\r\n   \r\n    return(\r\n        <div>\r\n            <div>\r\n                <Paginator\r\n                totalUsersCount={totalUsersCount} \r\n                pageSize={pageSize}\r\n                currentPage={currentPage}\r\n                requestUsers={requestUsers}\r\n                />\r\n            </div>\r\n              \r\n               { isFetching ? \r\n               \r\n               <div>\r\n                   <button onClick={sortUsers}>Sort Users</button>\r\n                    {\r\n                    users && users.map((element) => (\r\n                        <User\r\n                        key={element.id}\r\n                         element={element}\r\n                         isDisabledBtn={isDisabledBtn}\r\n                         followUser={followUser}\r\n                         unFollowUser={unFollowUser}\r\n                         />\r\n                       \r\n                    ))\r\n                }\r\n               </div>\r\n\r\n               : \r\n               <div className=\"lds-default\"><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div><div></div></div>\r\n               }\r\n            </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import { createSelector } from 'reselect';\r\n\r\nconst getUsers = (state) =>{\r\n    return state.usersPage.users;\r\n}\r\n\r\nconst getUsersSelect = createSelector(\r\n    getUsers,\r\n    users => users.filter( user => true)\r\n);\r\n\r\n\r\nconst getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nconst getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nconst getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nconst getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nconst getIsDisabledBtn = (state) => {\r\n    return state.usersPage.isDisabledBtn;\r\n}\r\n\r\n\r\nexport {getUsersSelect, getPageSize, getTotalUsersCount, getCurrentPage, getIsFetching ,getIsDisabledBtn};","import React from 'react';\r\nimport { getUsers,followThunk, unFollowThunk, sortUsers} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport withAuthRedirect from '../../hoc/withAuthRedirect';\r\nimport {getUsersSelect, getPageSize,\r\n     getTotalUsersCount, getCurrentPage,\r\n      getIsFetching ,getIsDisabledBtn} from '../../redux/users-selectors';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    \r\n\r\n    componentDidMount() {\r\n      const {currentPage, pageSize} = this.props;\r\n\r\n        this.props.getUsers(currentPage,pageSize);\r\n    }\r\n\r\n    requestUsers = (element) =>{\r\n       const {pageSize} = this.props;\r\n      \r\n        this.props.getUsers(element,pageSize);\r\n  \r\n    }\r\n\r\n    followUser = (id) => {\r\n        \r\n        this.props.followThunk(id);\r\n        \r\n    }\r\n\r\n    unFollowUser = (id) => {\r\n       this.props.unFollowThunk(id);\r\n        \r\n    }\r\n\r\n  \r\n\r\n\r\n    render() {\r\n        return (\r\n            <Users\r\n             props={this.props}\r\n             requestUsers={this.requestUsers}\r\n             followUser={this.followUser}\r\n             unFollowUser={this.unFollowUser}\r\n             sortUsers={this.sortUsers}\r\n            />\r\n        );\r\n    };\r\n}\r\n\r\n// let mapStateToProps = (state) => {\r\n//     return{\r\n//         users:state.usersPage.users,\r\n//         pageSize:state.usersPage.pageSize,\r\n//         totalUsersCount:state.usersPage.totalUsersCount,\r\n//         currentPage:state.usersPage.currentPage,\r\n//         isFetching:state.usersPage.isFetching,\r\n//         isDisabledBtn:state.usersPage.isDisabledBtn,\r\n//     }\r\n// }\r\n\r\nlet mapStateToProps = (state) => {\r\n    return{\r\n        users:getUsersSelect(state),\r\n        pageSize:getPageSize(state),\r\n        totalUsersCount:getTotalUsersCount(state),\r\n        currentPage:getCurrentPage(state),\r\n        isFetching:getIsFetching(state),\r\n        isDisabledBtn:getIsDisabledBtn(state),\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUsers,followThunk,unFollowThunk, sortUsers}),\r\n    withAuthRedirect,\r\n    )\r\n    (UsersContainer);\r\n"],"sourceRoot":""}